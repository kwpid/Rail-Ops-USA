rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Players collection - each user can only access their own data
    match /players/{userId} {
      // Allow read and write only if the authenticated user's ID matches the document ID
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Additional validation rules
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.player.id == userId
        && request.resource.data.stats.cash >= 0
        && request.resource.data.stats.xp >= 0
        && request.resource.data.stats.level >= 1;
        
      allow update: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.stats.cash >= 0
        && request.resource.data.stats.xp >= 0
        && request.resource.data.stats.level >= 1;
    }
    
    // News collection - public read, restricted write
    match /news/{newsId} {
      // Anyone authenticated can read news
      allow read: if request.auth != null;
      // For now, allow writes for seeding (restrict to admin in production)
      allow write: if request.auth != null;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
